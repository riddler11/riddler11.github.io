<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://riddler11.github.io</id>
    <title>Weishen&apos;s Blog</title>
    <updated>2023-11-17T13:53:16.007Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://riddler11.github.io"/>
    <link rel="self" href="https://riddler11.github.io/atom.xml"/>
    <subtitle>It&apos;s what you do in the dark, that puts you in the light.</subtitle>
    <logo>https://riddler11.github.io/images/avatar.png</logo>
    <icon>https://riddler11.github.io/favicon.ico</icon>
    <rights>All rights reserved 2023, Weishen&apos;s Blog</rights>
    <entry>
        <title type="html"><![CDATA[Academic Word 2022.11.9]]></title>
        <id>https://riddler11.github.io/academic-word/</id>
        <link href="https://riddler11.github.io/academic-word/">
        </link>
        <updated>2022-11-02T18:31:51.000Z</updated>
        <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:center">序号</th>
<th style="text-align:center">英语单词</th>
<th style="text-align:center">翻译</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1.</td>
<td style="text-align:center">breif description</td>
<td style="text-align:center">简要说明</td>
</tr>
<tr>
<td style="text-align:center">2.</td>
<td style="text-align:center">optical telecom application</td>
<td style="text-align:center">光通信应用</td>
</tr>
<tr>
<td style="text-align:center">3.</td>
<td style="text-align:center">bar code</td>
<td style="text-align:center">条形码</td>
</tr>
<tr>
<td style="text-align:center">4.</td>
<td style="text-align:center">characteristic parameters</td>
<td style="text-align:center">特征参数</td>
</tr>
<tr>
<td style="text-align:center">5.</td>
<td style="text-align:center">Beam shape and its divergence</td>
<td style="text-align:center">光束形状及其发散</td>
</tr>
<tr>
<td style="text-align:center">6.</td>
<td style="text-align:center">slope efficency</td>
<td style="text-align:center">斜率效率</td>
</tr>
<tr>
<td style="text-align:center">7.</td>
<td style="text-align:center">Beam radius</td>
<td style="text-align:center">光束</td>
</tr>
<tr>
<td style="text-align:center">8.</td>
<td style="text-align:center">Polarisation</td>
<td style="text-align:center">极化</td>
</tr>
<tr>
<td style="text-align:center">9.</td>
<td style="text-align:center">semiconductor</td>
<td style="text-align:center">半导体</td>
</tr>
<tr>
<td style="text-align:center">10.</td>
<td style="text-align:center">exited state</td>
<td style="text-align:center">激发态</td>
</tr>
<tr>
<td style="text-align:center">11.</td>
<td style="text-align:center">distribution</td>
<td style="text-align:center">分布</td>
</tr>
<tr>
<td style="text-align:center">12.</td>
<td style="text-align:center">broadened</td>
<td style="text-align:center">扩大</td>
</tr>
</tbody>
</table>
<ol start="13">
<li>corresponding 对应</li>
<li>conduction band 导带</li>
<li>valence band 价带</li>
<li>injecting electrons 注入电子</li>
<li>depletion region 耗尽层</li>
<li>forward bias 正向偏压</li>
<li>electron volts 电子伏特</li>
<li>optical cavity 光腔</li>
<li>refractive index 折射率</li>
<li>diffraction 衍射</li>
<li>diverge 分叉</li>
<li>propagation 传播</li>
<li>spontaneous 自发的</li>
<li>harmonic 谐波</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[电路板问题总结]]></title>
        <id>https://riddler11.github.io/dian-lu-ban-wen-ti-zong-jie/</id>
        <link href="https://riddler11.github.io/dian-lu-ban-wen-ti-zong-jie/">
        </link>
        <updated>2022-05-18T13:50:16.000Z</updated>
        <content type="html"><![CDATA[<p>钽电容有横杠的那边为正极，接反可能会冒烟，或者是反向电压很大</p>
<p>短路，万用表正负极一测几mv，然后会响那一档会明明白白</p>
<p>实在不知道什么问题，低电压高电流烧开就好，不过注意安全。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Altium Designer Learning]]></title>
        <id>https://riddler11.github.io/altium-designer-learning/</id>
        <link href="https://riddler11.github.io/altium-designer-learning/">
        </link>
        <updated>2022-03-05T01:44:15.000Z</updated>
        <content type="html"><![CDATA[<p>绘制流程：<br>
库——&gt;原理图——&gt;PCB图</p>
<h2 id="原理图库绘制">原理图库绘制</h2>
<p>Designator：<br>
芯片：U？<br>
usb接口：USB？<br>
磁珠PT：PT？<br>
电容CAP：C？<br>
晶振Crystal：Y？<br>
电阻RES：R？<br>
LED发光二极管：LED？<br>
排针HEADER：J？<br>
二极管Diode：D？<br>
按键：KEY？<br>
极性电容CAP：C？<br>
电源：PwR</p>
<p>Comment（写元件等的名称）<br>
Description（元件名称介绍等、我写名称，因为设计知道功能）</p>
<p>按下键盘g（左下角Grid栅格变成10）</p>
<p>Tool——&gt;New part（工具——&gt;新部件）将一个元件分开几部分画</p>
<h2 id="引脚">引脚：</h2>
<p>选择引脚按Tab键，设置参数编号一定要根据实际元件的顺序<br>
引脚长度length：30（主控） 10（其它如电阻这种）<br>
注意引脚的方向<br>
反斜杠\ 可以实现引脚定义的上标<br>
空格进行旋转引脚</p>
<p>shift+鼠标拖拽=复制<br>
在原理图里可以选择工具栏Design(设计)——》Make Schematic Library（生成原理图库）【这种方式可以将AD软件的自带原理图库复制进入自己的原理图库】</p>
<h2 id="原理图">原理图</h2>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[51 MCU further learning]]></title>
        <id>https://riddler11.github.io/51-mcu-further-learning/</id>
        <link href="https://riddler11.github.io/51-mcu-further-learning/">
        </link>
        <updated>2022-03-02T03:14:31.000Z</updated>
        <content type="html"><![CDATA[<p>引言：最近重新回归51单片机的使用，发现自己严重的不足。之前写的代码可以用“垃圾”两字概括。<br>
代码写得不规范，命名的不规范，以及不写注释。当时还觉得自己很牛。现在一回顾发现自己还缺少很多东西。需要更加深入学习。回归理论，再结合实践来提升自己。</p>
<h2 id="汇编语言">汇编语言：</h2>
<p>直接操作单片机内部资源，所以执行效率比C语言快。（优点）<br>
汇编语言的程序文件使用.asm作为后缀<br>
缺点也很明显：</p>
<ol>
<li>可读性差，需要借助芯片手册或者是寄存器说明等。</li>
<li>难以移植代码，换不同的mcu，指令可能完全不同，即使相似也难移植。</li>
<li>由于上述两点，维护困难和修改困难<br>
（所以个人还是选择用C语言进行书写代码）</li>
</ol>
<p>学习数字型芯片要看真值表<br>
在控制数字芯片的过程中，需要了解芯片的真值表</p>
<h2 id="中断个人目前很迷糊的点202232">中断（个人目前很迷糊的点2022.3.2）</h2>
<p>中断和定时是整个单片机的核心内容。所以学习任何款式的芯片要从中断定时入手。<br>
中断的意思是中间打断。理论上理解：举个不恰当的例子如打游戏，剧情类的游戏，一直在进行主线任务，突然间弹出支线任务。当进入这个支线任务后，要完成任务才能回到主线任务。这个支线任务可以理解为中断。（当然这种触发支线任务要满足一定的条件，如果不触发任务，则不会运行支线任务，会保持在主线任务中。）</p>
<p>通过写代码加深这部分的理解，如安装了很多软件的电脑，如果不运行软件的时候，待机状态，不会占用很多的运行资源；当运行软件的时候，才会让软件使用运行资源。写代码同理，开机后进入待机状态（可以等同于上电进入主程序），这时候的运行资源不会很高。当要使用到其它功能时，打开软件，启用程序（等同于进入中断）。用完软件后关闭软件，回到待机状态（等同回到主程序）。毕竟电脑运行的时候不会把所有软件都一直在后台跑（所以我们所写的程序也不应该一直在主程序中跑，应该使用中断）。</p>
<p>这部分主要学习的内容是对寄存器的控制。<br>
中断源是中断信号的来源。<br>
单片机并不是所有的信号都会触发中断。</p>
<p>51单片机中断事件有五个：</p>
<ol>
<li>
<p>INT0 （外部中断0）<br>
由P3.2管脚作为触发信号的输入</p>
</li>
<li>
<p>T0 定时/计数 (定时计数0)<br>
定时功能是由内部晶振产生脉冲，作为计数是由P3.4作为脉冲输入</p>
</li>
<li>
<p>INT1 （外部中断1）<br>
由P3.3管脚作为触发信号的输入</p>
</li>
<li>
<p>T1 定时/计数 (定时计数1)<br>
定时功能是由内部的晶振产生脉冲，作为计数是由P3.5作为计数脉冲输入</p>
</li>
<li>
<p>RX TX (串口通信中断)<br>
P3.0 P3.1 作为接口</p>
</li>
</ol>
<p>P3口，在中断寄存器没有设置的时候，作为普通IO口。只有寄存器设置后才能作为中断接口。</p>
<p>(2022.3.3)<br>
今天对于中断的理解加深了，中断不仅仅是要优化程序，而且还要保证精确度。中断里面不能放置大量的程序。这样会很不合理，还会因为嵌入过多的程序影响时效。对于大致的结构有了一定的了解。又写了一大堆的垃圾代码。这个是真的要多写多看多听才能有一个好的长进。而且对于一些数据的处理，不能想定义就定义。像16位二进制的数，2的16次方，如果要一位一位的修改定义是65536个，自己定义会写傻自己。虽然现在对于中断的书写还是有些混乱，不过我相信，在自己的努力下一定能够入门慢慢到精通。</p>
<p><img src="https://riddler11.github.io/post-images/1648036548266.png" alt="" loading="lazy"><br>
(2022.3.23)</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Excel表格转成markdown表格（其它JSON、SQL、HTML等格式也可参考本文）]]></title>
        <id>https://riddler11.github.io/excel-biao-ge-zhuan-cheng-markdown-biao-ge/</id>
        <link href="https://riddler11.github.io/excel-biao-ge-zhuan-cheng-markdown-biao-ge/">
        </link>
        <updated>2022-02-19T12:33:50.000Z</updated>
        <content type="html"><![CDATA[<p>因为上一篇文章电影院观影记录，出现的一些小问题，使得出现了这一篇的文章<br>
用Excel表格会比较好进行排序，特别是一些没有按时间顺序录入的东西<br>
这时候转换成markdown表格就是一个问题了</p>
<h2 id="首先要将文件保存为csv格式该格式是utf-8编码">首先要将文件保存为CSV格式（该格式是UTF-8编码）</h2>
<p>Excel默认格式是 .xlsx<br>
选择文件——&gt;另存为——&gt;接着选择CSV格式（详见下图）<br>
<img src="https://riddler11.github.io/post-images/1645285524382.jpg" alt="" loading="lazy"></p>
<h2 id="接着打开下面的转换网址链接">接着打开下面的转换网址链接</h2>
<p><a href="https://tableconvert.com/csv-to-json">转换网址链接</a><br>
接着点击upload CSV<br>
选择刚刚的文件 点击打开<br>
出现图片中这个提示，导入成功<br>
<img src="https://riddler11.github.io/post-images/1645285775169.jpg" alt="" loading="lazy"></p>
<h2 id="接下来在table-generator-可以选择想要的各种格式">接下来在Table Generator 可以选择想要的各种格式</h2>
<p>由于这篇文章是转换为markdown，所以是以下图片的效果<br>
<img src="https://riddler11.github.io/post-images/1645285944286.jpg" alt="" loading="lazy"></p>
<p>如有不懂可观看以下视频，B站P2有字幕版</p>
<div style="position: relative; padding: 30% 45%;">
    <iframe style="
        position: absolute; 
        width: 100%; 
        height: 100%; 
        left: 0; top: 0;" 
        src="//player.bilibili.com/player.html?aid=254228242&bvid=BV1nY411579c&cid=385215083&page=1&high_quality=1" 
        scrolling="no" 
        border="0" 
        frameborder="no" 
        framespacing="0" 
        allowfullscreen="true">
    </iframe>
</div>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[因为想要设置评论区邮件提醒，导致后续的问题]]></title>
        <id>https://riddler11.github.io/yin-wei-xiang-yao-she-zhi-you-jian-ti-xing-dao-zhi-hou-xu-de-wen-ti/</id>
        <link href="https://riddler11.github.io/yin-wei-xiang-yao-she-zhi-you-jian-ti-xing-dao-zhi-hou-xu-de-wen-ti/">
        </link>
        <updated>2022-02-12T06:31:03.000Z</updated>
        <content type="html"><![CDATA[<h2 id="首先第一个问题概念">首先第一个问题：概念</h2>
<p>域名？ 二级域名？DNS解析 这貌似是计算机基础知识，现在已经忘记得差不多了<br>
接下来就是学习以及用自己的语言进行解释出来。</p>
<p>翻箱底找出了计算机网络教程书籍。（2022.2.12）</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Reading]]></title>
        <id>https://riddler11.github.io/reading/</id>
        <link href="https://riddler11.github.io/reading/">
        </link>
        <updated>2022-02-09T09:28:33.000Z</updated>
        <content type="html"><![CDATA[<h2 id="book-list">book list:</h2>
<ol>
<li>
<p>物理学的进化</p>
</li>
<li>
<p>程序员数学</p>
</li>
<li>
<p>PR CC教程</p>
</li>
<li>
<p>TensorFlow</p>
</li>
<li>
<p>C#程序设计（以上是2022.2.9添加）</p>
</li>
<li>
<p>计算机网络教程（2022.2.12添加）</p>
<p>希望一天进行一点阅读，写相应的读后感或者总结。</p>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vocabulary learning]]></title>
        <id>https://riddler11.github.io/vocabulary-learning/</id>
        <link href="https://riddler11.github.io/vocabulary-learning/">
        </link>
        <updated>2021-12-26T08:28:03.000Z</updated>
        <content type="html"><![CDATA[<p>非常：除了very，可以用exceedingly。<br>
重要的：除了important，可indispensable。<br>
政府：除了government，其实可以用authority。<br>
成功：除了success，可以用glory。<br>
e.g.</p>
<ol>
<li>
<p>English must be pointed out exceedingly indispensable.<br>
英语必须被指出非常重要的。</p>
</li>
<li>
<p>Authorities should be proposed to adopt action.<br>
政府应该被建议采取行动。</p>
</li>
<li>
<p>If there exists a dream, glories are supposed to be achieved.<br>
如果有梦想，就应该会成功。</p>
</li>
</ol>
<p>(2021.12.26)</p>
<p>重要的，杰出的：除了important or well known，可以用 prominent<br>
该词还有显著的、突出的 意思<br>
e.g.</p>
<ol>
<li>
<p>He played a prominent part in the campaign.<br>
他在这次运动中发挥了重要作用。</p>
</li>
<li>
<p>She was prominent in the fashion industry.<br>
她曾在时装界名噪一时。</p>
</li>
<li>
<p>The story was given a prominent position on the front page.<br>
这则报道刊登在头版的显著位置。</p>
</li>
</ol>
<p>巨大的：除了huge，可用enormous、immense</p>
<p>enormous pressure 巨大压力<br>
immense pressure 巨大压力<br>
(2021.12.27)</p>
<p>play a  pivotal/ crucial/ vital role in … 在……中扮演重要作用<br>
(2022.1.10)</p>
<p>To be continued...</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[AD操作（2021.10.15）]]></title>
        <id>https://riddler11.github.io/ad-cao-zuo-20211015/</id>
        <link href="https://riddler11.github.io/ad-cao-zuo-20211015/">
        </link>
        <updated>2021-10-15T01:08:33.000Z</updated>
        <content type="html"><![CDATA[<h2 id="画图顺序">画图顺序</h2>
<ol>
<li>主控芯片</li>
<li>电源</li>
<li>下载烧写电路</li>
<li>引脚引出</li>
</ol>
<h2 id="元件注意事项">元件注意事项</h2>
<p>引脚按照官方的顺序排列<br>
关于电容放置尽量放近元件</p>
<h2 id="布线注意事项">布线注意事项：</h2>
<p>信号线8-10mil<br>
电源线30-50mil<br>
GND 铺铜</p>
<h2 id="pcb注意事项">PCB注意事项</h2>
<ol>
<li>主控芯片，相关芯片，电源</li>
<li>尽量走顶层</li>
<li>有天线的地方一定要镂空下面不能铺铜</li>
</ol>
<h2 id="单位换算">单位换算：</h2>
<p>1uF=1000nF<br>
1nF=1000pF<br>
1mil=0.0254mm</p>
<h2 id="贴片类型对应功率">贴片类型对应功率</h2>
<p>0805：1/8w  0603：1/10w 1206 1/4w</p>
<p>功率计算公式：P=U²/R</p>
<h2 id="led发光二极管压降及额定电流">LED发光二极管压降及额定电流</h2>
<p>红色发光二极管的压降为2.0-2.2V<br>
黄色发光二极管的压降为1.8-2.0V<br>
绿色发光二极管的压降为3.0-3.2V<br>
正常发光时额定电流为20mA</p>
<h2 id="pcb连线步骤">PCB连线步骤：</h2>
<ol>
<li>主控线芯片</li>
<li>体型较大芯片</li>
<li>电阻电容</li>
</ol>
<h2 id="绘制pcb快捷键">绘制PCB快捷键</h2>
<p>快速放线 P+T<br>
直接转换单位 Ctrl+q<br>
改字体 E+N<br>
看某条线路连接 Ctrl+鼠标左键<br>
隐藏丝线 N+Hide Connections</p>
<h2 id="焊盘">焊盘</h2>
<p>定位焊盘 通孔：130mil XY：170mil</p>
<p>Minimum Solder Mask sliver 阻焊<br>
Silk To Solder Mask Clearance 丝印在焊盘上 Electrical 0mil Clearance 最小间隔6mil<br>
Silk To Silk Clearance 丝印与其它丝印 0mil</p>
<p>过孔与线距离最小0.152mm（6mil）<br>
过孔规则：最大0.6mm直径 最小0.3mm孔径<br>
Width 规则 Min 5mil Max 100mil<br>
（2021.10.15）</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Wireless transmission of RFID identification information to server based on ESP8266.（基于ESP8266无线传输射频识别信息传输到服务器）]]></title>
        <id>https://riddler11.github.io/wireless-transmission-of-rfid-identification-information-to-server-based-on-esp8266ji-yu-esp8266-wu-xian-chuan-shu-she-pin-shi-bie-shi-bie-xin-xi-dao-fu-wu-qi/</id>
        <link href="https://riddler11.github.io/wireless-transmission-of-rfid-identification-information-to-server-based-on-esp8266ji-yu-esp8266-wu-xian-chuan-shu-she-pin-shi-bie-shi-bie-xin-xi-dao-fu-wu-qi/">
        </link>
        <updated>2021-10-13T12:26:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="this-is-project-i-did-a-long-time-ago-because-of-this-project-i-learn-a-lot-of-things-not-only-academically-but-also-the-attitude-of-dealing-with-people">This is project I did a long time ago. Because of this project, I learn a lot of things. (Not only academically, but also the attitude of dealing with people.)</h3>
<p>First, look back the board I designed in the past.</p>
<figure data-type="image" tabindex="1"><img src="https://riddler11.github.io/post-images/1634129991464.png" alt="the board" loading="lazy"></figure>
<p>As we all know practice makes prefect. This is the design when I just learned how to use AD software. Integrated by three modules. Arduino uno, ESP8266 and PN532.</p>
<h3 id="i-use-esp8266-to-wirelessly-transmit-the-information-received-by-pn532">I use ESP8266 to wirelessly transmit the information received by PN532.</h3>
<h2 id="about-esp8266">About ESP8266</h2>
<p>It has three modes</p>
<ol>
<li>STA  (station)</li>
<li>AP    (Access Point)</li>
<li>STA、AP Both</li>
</ol>
<p>The technical part adopts STA mode in this project. Arduino sends AT instruction to initialize the module.<br>
<img src="https://riddler11.github.io/post-images/1634181047220.jpg" alt="ESP8266" loading="lazy"><br>
But how to <strong>connect</strong> with the module.<br>
My method is as follows.</p>
<table>
<thead>
<tr>
<th style="text-align:center">Arduino</th>
<th style="text-align:center">connect</th>
<th style="text-align:center">ESP8266</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">3.3V</td>
<td style="text-align:center">&lt;—&gt;</td>
<td style="text-align:center">VCC</td>
</tr>
<tr>
<td style="text-align:center">GND</td>
<td style="text-align:center">&lt;—&gt;</td>
<td style="text-align:center">GND</td>
</tr>
<tr>
<td style="text-align:center">TXD</td>
<td style="text-align:center">&lt;—&gt;</td>
<td style="text-align:center">RXD</td>
</tr>
<tr>
<td style="text-align:center">RXD</td>
<td style="text-align:center">&lt;—&gt;</td>
<td style="text-align:center">TXD</td>
</tr>
<tr>
<td style="text-align:center">3.3V</td>
<td style="text-align:center">&lt;—&gt;</td>
<td style="text-align:center">CH _PD(I added pull-up resistor 1.5K*3. Add a pull resistor about 10K on the internet.)</td>
</tr>
</tbody>
</table>
<h3 id="on-transmission-communication-of-several-modes-of-pn532">On transmission communication of several modes of PN532.</h3>
<figure data-type="image" tabindex="2"><img src="https://riddler11.github.io/post-images/1634182188847.jpg" alt="modes of PN532" loading="lazy"></figure>
<p>As you can see, there are three modes to transmit messages.<br>
HSU、SPI、I2C.</p>
<p>Used with Arduino UNO:<br>
In HSU mode, the serial port monitor will have no information (inconvenient for debugging).<br>
I have never used I2C mode. So I use SPI mode to implementation.<br>
How to turn on SPI mode? Switch <strong>channel1: OFF, channel2: ON</strong>.</p>
<p>This is the note I wrote before.<br>
<img src="https://riddler11.github.io/post-images/1634182979467.png" alt="Notes made before." loading="lazy"></p>
<p>Module connection</p>
<table>
<thead>
<tr>
<th style="text-align:center">Arduino</th>
<th style="text-align:center">connect</th>
<th style="text-align:center">PN532(SPI mode)</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Pin13 or ICSP-3</td>
<td style="text-align:center">&lt;—&gt;</td>
<td style="text-align:center">SCK</td>
</tr>
<tr>
<td style="text-align:center">Pin12 or ICSP-1</td>
<td style="text-align:center">&lt;—&gt;</td>
<td style="text-align:center">MISO</td>
</tr>
<tr>
<td style="text-align:center">Pin12 or ICSP-4</td>
<td style="text-align:center">&lt;—&gt;</td>
<td style="text-align:center">MOSI</td>
</tr>
<tr>
<td style="text-align:center">Pin10</td>
<td style="text-align:center">&lt;—&gt;</td>
<td style="text-align:center">SS</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:center">PN532 Pin</th>
<th style="text-align:center">Description of pin</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">SCK:</td>
<td style="text-align:center">Serial Clock</td>
</tr>
<tr>
<td style="text-align:center">MISO:</td>
<td style="text-align:center">Master Input Slave Output</td>
</tr>
<tr>
<td style="text-align:center">MOSI:</td>
<td style="text-align:center">Master Output Slave Input</td>
</tr>
<tr>
<td style="text-align:center">SS(CS):</td>
<td style="text-align:center">Chip Select</td>
</tr>
</tbody>
</table>
<p>Oh my god. What a terrible design. (This is what I made at that time.)<br>
<img src="https://riddler11.github.io/post-images/1634183636663.png" alt="terrible design" loading="lazy"></p>
<h3 id="hardware-running-process">Hardware running process.</h3>
<ol>
<li>Arduino power-on startup procedure.</li>
<li>Initialize the wireless module, connect the wireless module with the preset WiFi, and then connect the server written in Java through TCP protoco</li>
<li>PN532 starts and waits for the card to be read.</li>
<li>When there is a card on it, send the card ID to the server.</li>
</ol>
<p>Software part:<br>
Database design, Server based on Java.</p>
<p>Java server code:<br>
It is divided into three parts: Server part, multithreading part, and display database part (for the convenience of connecting with Android in the back).</p>
<p>Implementation effect<br>
<img src="https://riddler11.github.io/post-images/1634184937995.jpg" alt="Display" loading="lazy"><br>
<img src="https://riddler11.github.io/post-images/1634185294288.jpg" alt="Display2" loading="lazy"></p>
<p>Video in bilibili.</p>
<div style="position: relative; padding: 30% 45%;">
    <iframe style="
        position: absolute; 
        width: 100%; 
        height: 100%; 
        left: 0; top: 0;" 
        src="//player.bilibili.com/player.html?aid=293520085&bvid=BV18f4y177BF&cid=426004138&page=1&high_quality=1" 
        scrolling="no" 
        border="0" 
        frameborder="no" 
        framespacing="0" 
        allowfullscreen="true">
    </iframe>
</div>
<p><a href="https://github.com/riddler11/Wireless-RFID-ESP8266-Server">Now you can download some code on github, just click here.</a></p>
]]></content>
    </entry>
</feed>